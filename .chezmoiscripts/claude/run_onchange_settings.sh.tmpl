{{ if eq .chezmoi.os "darwin" "linux" -}}
#!/bin/bash
set -euo pipefail

{{/* Re-run if ~/.claude.json existence changed */ -}}
{{- $lstatResult := joinPath .chezmoi.homeDir ".claude.json" | lstat -}}
{{- $claude_json_status := and $lstatResult (eq $lstatResult.type "file") -}}

# Early exit if jq is not installed
if ! type jq >/dev/null 2>&1; then
    echo "‚ùå jq is not available. Exiting..."
    exit 1
fi

# Update each setting from .claude.settings to top-level in ~/.claude.json
original_claude_json_path="$HOME/.claude.json"
current_claude_json_copy_path=$(mktemp)
modified_claude_json_copy_path=$(mktemp)
trap 'rm -f "$current_claude_json_copy_path" "$modified_claude_json_copy_path"' EXIT

if [ ! -f "$original_claude_json_path" ]; then
    echo "üöß $HOME/.claude.json not found. Run 'claude \"/init\"' to create it."
    exit 0
fi

cp "$original_claude_json_path" "$current_claude_json_copy_path"

{{- range $key, $value := .claude.settings }}
# shellcheck disable=SC1083
if ! jq --arg key "{{ $key }}" --arg value {{ $value | toJson }} '.[$key] = $value' "$current_claude_json_copy_path" >"$modified_claude_json_copy_path"; then
    echo "‚ùå Failed to update {{ $key }} in ~/.claude.json"
    rm -f "$current_claude_json_copy_path" "$modified_claude_json_copy_path"
    exit 1
fi
mv "$modified_claude_json_copy_path" "$current_claude_json_copy_path"
{{- end }}

{{ $settingsKeys := .claude.settings | keys | sortAlpha | join ", " -}}
# Replace the original file with the updated one
if mv "$current_claude_json_copy_path" "$original_claude_json_path"; then
    echo "‚úÖ Successfully updated {{ $settingsKeys }} in ~/.claude.json"
else
    echo "‚ùå Failed to replace ~/.claude.json"
    rm -f "$current_claude_json_copy_path"
    exit 1
fi
{{ end -}}
