{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "awsAuthRefresh": "aws sso login",
  "env": {
    "BASH_DEFAULT_TIMEOUT_MS": "300000",
    "BASH_MAX_TIMEOUT_MS": "1200000",
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": "1",
    "DISABLE_AUTOUPDATER": "1",
    "DISABLE_BUG_COMMAND": "1",
    "DISABLE_ERROR_REPORTING": "1",
    "DISABLE_MICROCOMPACT": "1",
    "DISABLE_TELEMETRY": "1",
    "ENABLE_BACKGROUND_TASKS": "1"
  },
  "cleanupPeriodDays": 99999,
  "statusLine": {
    "type": "command",
    "command": "ccusage statusline --cost-source both"
  },
  "enabledPlugins": {
    "security-pro@claude-code-templates": true,
    "documentation-generator@claude-code-templates": true,
    "example-skills@anthropics-skills": true
  },
  "extraKnownMarketplaces": {
    "claude-code-templates": {
      "source": {
        "source": "github",
        "repo": "davila7/claude-code-templates"
      }
    },
    "anthropics-skills": {
      "source": {
        "source": "github",
        "repo": "anthropics/skills"
      }
    }
  },
  "hooks": {
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "bun run --silent -i {{ .chezmoi.sourceDir }}/.claude/hooks/notify.ts"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "bun run --silent -i {{ .chezmoi.sourceDir }}/.claude/hooks/notify.ts"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "WebSearch",
        "hooks": [
          {
            "type": "command",
            "command": "bun run --silent -i {{ .chezmoi.sourceDir }}/.claude/hooks/block_web_search.ts"
          }
        ]
      },
      {
        "matcher": "WebFetch|mcp__readability__read_url_content_as_markdown",
        "hooks": [
          {
            "type": "command",
            "command": "bun run --silent -i {{ .chezmoi.sourceDir }}/.claude/hooks/web_fetch_advice.ts"
          }
        ]
      },
      {
        "matcher": "Read",
        "hooks": [
          {
            "type": "command",
            "command": "bun run --silent -i {{ .chezmoi.sourceDir }}/.claude/hooks/markdown_tree.ts"
          }
        ]
      },
      {
        "matcher": "Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "bun run --silent -i {{ .chezmoi.sourceDir }}/.claude/hooks/typescript/no_restricted_edit.ts"
          }
        ]
      },
      {
        "matcher": "mcp__deepwiki__.*",
        "hooks": [
          {
            "type": "command",
            "command": "bun run --silent -i {{ .chezmoi.sourceDir }}/.claude/hooks/check_github_repo_visibility.ts"
          }
        ]
      }
    ]
  },
  "permissions": {
    "defaultMode": "acceptEdits",
    "allow": [
      "Edit",
      "Write",
      "NotebookEdit",
      "SlashCommand",
      "WebSearch",

      "Bash(git:*)",

      "Bash(gh cache:*)",
      "Bash(gh extension browse:*)",
      "Bash(gh extension list:*)",
      "Bash(gh extension search:*)",
      "Bash(gh gist list:*)",
      "Bash(gh gist view:*)",

      "Bash(gh issue list:*)",
      "Bash(gh issue status:*)",
      "Bash(gh issue view:*)",

      "Bash(gh pr checks:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr ready:*)",
      "Bash(gh pr status:*)",
      "Bash(gh pr view:*)",

      "Bash(gh repo gitignore:*)",
      "Bash(gh repo license:*)",
      "Bash(gh repo list:*)",
      "Bash(gh repo sync:*)",
      "Bash(gh repo view:*)",

      "Bash(gh search:*)",

      "Bash(gh workflow list:*)",
      "Bash(gh workflow view:*)",

      "Bash(mise install:*)",
      "Bash(mise run:*)",

      "Bash(mv:*)",
      "Bash(sed:*)",
      "Bash(jq:*)",
      "Bash(cp:*)",
      "Bash(mkdir:*)",
      "Bash(cat:*)",
      "Bash(less:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(tree:*)",
      "Bash(pwd:*)",
      "Bash(wc:*)",
      "Bash(diff:*)",
      "Bash(awk:*)",
      "Bash(cut:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",

      "Bash(basename:*)",
      "Bash(dirname:*)",
      "Bash(realpath:*)",
      "Bash(readlink:*)",

      "Bash(man:*)",
      "Bash(which:*)",
      "Bash(type:*)",

      "Bash(fd:*)",
      "Bash(rg:*)",

      "Bash(npm:*)",
      "Bash(pnpm:*)",
      "Bash(na:*)",
      "Bash(ni:*)",

      "Bash(bundle:*)",

      "Bash(go mod tidy:*)",
      "Bash(go mod download:*)",
      "Bash(go get:*)",
      "Bash(go test:*)",
      "Bash(go vet:*)",

      "Bash(memo:*)",
      "Bash(gemini:*)",

      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__bundlephobia__get_npm_package_info",
      "mcp__deepwiki__read_wiki_structure",
      "mcp__deepwiki__read_wiki_contents",
      "mcp__deepwiki__ask_question",
      "mcp__ide__getDiagnostics",
      "mcp__notion__fetch",
      "mcp__grep__searchGitHub",
      "mcp__sentry__get_issue_details",
      "mcp__sentry__find_projects",
      "mcp__sentry__search_issues",
      "mcp__sentry__search_events",
      "mcp__sentry__search_docs",
      "mcp__sentry__get_doc"
    ],
    "deny": [
      "Bash(sudo:*)",
      "Bash(rm:*)",
      "Bash(rm -rf:*)",
      "Bash(rmdir:*)",

      "Bash(git push:*)",
      "Bash(git reset:*)",
      "Bash(git rebase:*)",

      "Read(.env*)",
      "Read(.env.*)",
      "Read(.dev.vars)",
      "Read(.dev.vars.*)",
      "Read(id_rsa)",
      "Read(id_ed25519)",
      "Read(**/*token*)",
      "Read(**/*key*)",
      "Write(.env*)",
      "Write(**/secrets/**)",

      "Bash(curl:*)",
      "Bash(http:*)",
      "Bash(wget:*)",

      "Bash(nc:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm remove:*)",
      "Bash(pnpm uninstall:*)",
      "Bash(pnpm remove:*)",
      "Bash(npm publish:*)",
      "Bash(pnpm publish:*)",

      "Bash(psql:*)",
      "Bash(mysql:*)",
      "Bash(mongod:*)"
    ]
  }
}
